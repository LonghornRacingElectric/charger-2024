#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_SFPRODISPLAYLIGHTITALIC_OTF_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0029, parenright], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x0029, parenright], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x003F, question], Kerning dist = -2)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0069,  2 },  // (First char = [0x0069, i], Second char = [0x003F, question], Kerning dist = 2)
    { 0x006E, -1 },  // (First char = [0x006E, n], Second char = [0x003F, question], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0030, -1 },  // (First char = [0x0030, zero], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0044, -3 },  // (First char = [0x0044, D], Second char = [0x0056, V], Kerning dist = -3)
    { 0x004F, -3 },  // (First char = [0x004F, O], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0067, -1 },  // (First char = [0x0067, g], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0068, -2 },  // (First char = [0x0068, h], Second char = [0x0056, V], Kerning dist = -2)
    { 0x006E, -2 },  // (First char = [0x006E, n], Second char = [0x0056, V], Kerning dist = -2)
    { 0x006F, -3 },  // (First char = [0x006F, o], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0070, -3 },  // (First char = [0x0070, p], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0030, -1 },  // (First char = [0x0030, zero], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0057, W], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0067, -1 },  // (First char = [0x0067, g], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0068, -2 },  // (First char = [0x0068, h], Second char = [0x0057, W], Kerning dist = -2)
    { 0x006E, -2 },  // (First char = [0x006E, n], Second char = [0x0057, W], Kerning dist = -2)
    { 0x006F, -3 },  // (First char = [0x006F, o], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0070, -3 },  // (First char = [0x0070, p], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0028, -1 },  // (First char = [0x0028, parenleft], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0028, -1 },  // (First char = [0x0028, parenleft], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0028, -1 },  // (First char = [0x0028, parenleft], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0066, f], Kerning dist = 1)
    { 0x0063,  1 },  // (First char = [0x0063, c], Second char = [0x0066, f], Kerning dist = 1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0066, f], Kerning dist = 1)
    { 0x0028, -1 },  // (First char = [0x0028, parenleft], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0028, -1 },  // (First char = [0x0028, parenleft], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0074, t], Kerning dist = 1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0074, t], Kerning dist = 1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0077, w], Kerning dist = 1)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x0077, w], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, n], Second char = [0x0077, w], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x0077, w], Kerning dist = -1)
};
